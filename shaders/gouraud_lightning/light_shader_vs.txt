#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;

out vec4 resultObjColor;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

struct Light {
	vec3 position;

	vec3 ambient;
	vec3 diffuse;
	vec3 specular;
};

uniform Light light;
uniform sampler2D texture1;

void main()
{
    vec2 TexCoords = aTexCoords;
    vec3 FragPos = vec3(view * model * vec4(aPos, 1.0));
    gl_Position = projection * view * vec4(FragPos, 1.0);

	vec3 ambient = light.ambient;

	vec3 diffuse = light.diffuse;

	vec3 specular = light.specular;

	resultObjColor = vec4((specular + diffuse + ambient), 1.0) * texture(texture1, TexCoords);
}